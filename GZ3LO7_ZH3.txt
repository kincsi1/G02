SELECT rated, AVG(runtime)
FROM movies
WHERE year > 1950
GROUP BY rated

db.movies.find({},
{"rated": 1,
{$group:
{_id: "$type", total: {$avg: "rated"}}}


A nyelvek közül a legelső English legyen ÉS
A film 2 alkalommal lett díjazva (awards.wins)
Csak a filmek címe, írói, rendezői és az év mezők jelenjenek meg
Rendezzük sorba a filmeket év szerint csökkenően

db.movies.find({$and:
[{languages:english}, {awards.win:2}] },{}
"_id":0,
"plot":0,
"genres":0,
"cast":1,
"poster":0,
"title":1,
"fullplot":0,
"languages":0,
"released":1 DESC,
"directors":1,
"awards":0,
"imdb":0,
"countries":0,
"tomatoes":0
)

A MongoDB shell-ben csatlakozzon a sample_mflix adatbázishoz, és kérdezze le a users gyűjteményt az alábbiak szerint:
Csak a felhasználók neve és email címe jelenjen meg
Az email cím tartalmazza a .com karaktersorozatot.

db.users.find({},
{
"_id":0,
"name":1,
"email":1,
"password":0
})


Csatlakozzon a Movies adatbázishoz a Neo4J Sandbox-ban (vagy a Desktop-ban), és kérdezze le a következőket:

Listázzuk a filmek címét és szereplőit
Csak a szereplő neve és a film cím jelenjen meg
Szűrjünk az 1970 utáni évekre VAGY azokra a filmekre, amelyek címében a "Love" szó szerepel
Nevezzük el a megjelenített mezőket
Rendezzük sorba az eredményt cím szerint csökkenően!

MATCH(p:Person)-[:ACTED_IN]->(m:Movie)
WHERE m.RELASED>1970 AND m.title CONTAINS 'Love',
RETURN m.title AS 'cím', p.name AS 'szereplő'
ORDER BY m.title DESC


A neo4j Sandbox-ban (vagy a Desktop-ban) csatlakozzon a Movies adatbázishoz, és kérdezze le a következő SQL-lekérdezésnek megfelelő adatokat:

SELECT TOP 5  p.name AS Director, COUNT(*) AS NumMoviesDirected

FROM movies m JOIN person p ON m.directorId = p.personId

GROUP BY p.name

ORDER BY NumMoviesDirected DESC



